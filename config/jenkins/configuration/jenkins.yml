---
credentials:
  system:
    domainCredentials:
    - credentials:
      - azure:
          azureEnvironmentName: "Azure"
          clientId: "<AZURE_SP_CLIENT>"
          clientSecret: "<AZURE_SP_SECRET>"
          id: "9e713c35-c19b-4ddd-8cd5-110c2733c2e5"
          scope: SYSTEM
          subscriptionId: "<AZURE_SP_SUBSCRIPTION>"
          tenant: "<AZURE_SP_TENANT>"
      - usernamePassword:
          id: "fe7345fe-5152-40e9-a2bf-3ce7c38ad266"
          password: "<OEADMIN_PASSWORD>"
          scope: SYSTEM
          username: "oeadmin"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - azureVM:
      azureCredentialsId: "9e713c35-c19b-4ddd-8cd5-110c2733c2e5"
      cloudName: "Global Parrot Swarm"
      deploymentTimeout: 1200
      existingResourceGroupName: "cyan-jenkins-test2"
      maxVirtualMachinesLimit: 2
      resourceGroupReferenceType: "existing"
      vmTemplates:
      - agentLaunchMethod: "SSH"
        agentWorkspace: "/var/jenkins"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "fe7345fe-5152-40e9-a2bf-3ce7c38ad266"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: "cyanvmstorage"
        imageReference:
          galleryImageDefinition: "ubuntu-16.04"
          galleryImageVersion: "latest"
          galleryName: "Production_Images"
          galleryResourceGroup: "OE-Jenkins-Images"
          gallerySubscriptionId: "c4fdda6e-bfbd-4b8e-9703-037b3a45bf37"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-1604"
        location: "Canada Central"
        newStorageAccountName: "cyanvmstorage"
        noOfParallelJobs: 1
        osDiskSize: 0
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 10
        shutdownOnIdle: false
        storageAccountNameReferenceType: "existing"
        storageAccountType: "Standard_LRS"
        templateDesc: "Descriptive Parrots in Canada"
        templateDisabled: false
        templateName: "mynameiscanadianparrot"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: false
        virtualMachineSize: "Standard_DC4s_v2"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  labelAtoms:
  - name: "master"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 1
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
        - id: party
          password: parrot
  slaveAgentPort: 50000
  systemMessage: |
    Welcome to our build server.

    Config is now mostly handled by the 'Jenkins Configuration as Code' (JCasC) plugin.
    JCasC config can be found in the jenkins.yaml file in the $JENKINS_HOME/jenkins.yaml folder.
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  globalJobDslSecurityConfiguration:
    useScriptSecurity: true
  sSHD:
    port: -1
  scriptApproval:
    approvedSignatures:
      - "staticMethod io.jenkins.plugins.casc.ConfigurationAsCode get"
      - "method io.jenkins.plugins.casc.ConfigurationAsCode configure"
unclassified:
  azureKeyVault:
    credentialID: "9e713c35-c19b-4ddd-8cd5-110c2733c2e5"
    keyVaultURL: "<AZURE_KEYVAULT_URL>"
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  defaultFolderConfiguration:
    healthMetrics:
    - worstChildHealthMetric:
        recursive: true
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    hookUrl: "http://oe-jenk-master-test2.canadacentral.cloudapp.azure.com/github-webhook/"
  gitSCM:
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
