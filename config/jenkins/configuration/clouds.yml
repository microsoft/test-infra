---
jenkins:
  clouds:
  - azureVM:
      azureCredentialsId: "9e713c35-c19b-4ddd-8cd5-110c2733c2e5"
      cloudName: "AzureVMAgents"
      configurationStatus: "pass"
      deploymentTimeout: 1200
      newResourceGroupName: "<AZURE_VM_RESOURCE_GROUP>"
      maxVirtualMachinesLimit: 10
      resourceGroupReferenceType: "new"
      vmTemplates:
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-18.04"
          galleryImageVersion: "latest"
          galleryName: "Production_Images"
          galleryResourceGroup: "OE-Jenkins-Images"
          gallerySubscriptionId: "c4fdda6e-bfbd-4b8e-9703-037b3a45bf37"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-1804"
        location: "<AZURE_VM_LOCATION>"
        noOfParallelJobs: 1
        osDiskSize: 0
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        templateDisabled: false
        templateName: "ubuntu1804"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: false
        virtualMachineSize: "Standard_DC2s_v2"
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-16.04"
          galleryImageVersion: "latest"
          galleryName: "Production_Images"
          galleryResourceGroup: "OE-Jenkins-Images"
          gallerySubscriptionId: "c4fdda6e-bfbd-4b8e-9703-037b3a45bf37"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-1604"
        location: "<AZURE_VM_LOCATION>"
        noOfParallelJobs: 1
        osDiskSize: 0
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        templateDisabled: false
        templateName: "ubuntu1604"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: false
        virtualMachineSize: "Standard_DC2s_v2"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "rhel-8"
          galleryImageVersion: "latest"
          galleryName: "Production_Images"
          galleryResourceGroup: "OE-Jenkins-Images"
          gallerySubscriptionId: "c4fdda6e-bfbd-4b8e-9703-037b3a45bf37"
        imageTopLevelType: "advanced"
        initScript: |-
          gpasswd -a oeadmin docker
          chmod g+rw /var/run/docker.sock

          (echo n; echo; echo; echo; echo t; echo; echo 31; echo w) | fdisk /dev/sda
          pvcreate /dev/sda4
          vgextend rootvg /dev/sda4
          lvextend -l +100%FREE /dev/rootvg/homelv
          resize2fs /dev/rootvg/homelv
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-RHEL-8"
        location: "<AZURE_VM_LOCATION>"
        noOfParallelJobs: 1
        osDiskSize: 200
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        templateDisabled: false
        templateName: "rhel8"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: false
        virtualMachineSize: "Standard_DC2s_v2"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ws2016-SGX"
          galleryImageVersion: "latest"
          galleryName: "Production_Images"
          galleryResourceGroup: "OE-Jenkins-Images"
          gallerySubscriptionId: "c4fdda6e-bfbd-4b8e-9703-037b3a45bf37"
        imageTopLevelType: "advanced"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "SGXFLC-Windows-2016-Docker"
        location: "<AZURE_VM_LOCATION>"
        noOfParallelJobs: 1
        osDiskSize: 200
        osType: "Windows"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        templateDesc: "SGXFLC-Windows-2016-Docker"
        templateDisabled: false
        templateName: "ws16"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: false
        virtualMachineSize: "Standard_DC2s_v2"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ws2019-SGX"
          galleryImageVersion: "latest"
          galleryName: "Production_Images"
          galleryResourceGroup: "OE-Jenkins-Images"
          gallerySubscriptionId: "c4fdda6e-bfbd-4b8e-9703-037b3a45bf37"
        imageTopLevelType: "advanced"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "SGXFLC-Windows-2019-Docker"
        location: "<AZURE_VM_LOCATION>"
        noOfParallelJobs: 1
        osDiskSize: 200
        osType: "Windows"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        templateDesc: "SGXFLC-Windows-2019-Docker"
        templateDisabled: false
        templateName: "ws19"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: false
        virtualMachineSize: "Standard_DC4s_v2"
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-18.04"
          galleryImageVersion: "latest"
          galleryName: "Production_Images"
          galleryResourceGroup: "OE-Jenkins-Images"
          gallerySubscriptionId: "c4fdda6e-bfbd-4b8e-9703-037b3a45bf37"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "Overwatch"
        location: "<AZURE_VM_LOCATION>"
        noOfParallelJobs: 4
        osDiskSize: 0
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        templateDisabled: false
        templateName: "ubuntu1804"
        usageMode: "Use this node as much as possible"
        usePrivateIP: false
        virtualMachineSize: "Standard_D2_v2"
